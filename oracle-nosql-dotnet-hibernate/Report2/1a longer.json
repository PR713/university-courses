db.orders.aggregate([
  {
    $lookup: {
      from: "customers",
      localField: "CustomerID",
      foreignField: "CustomerID",
      as: "Customer"
    }
  },
  { $unwind: "$Customer" },
  {
    $lookup: {
      from: "employees",
      localField: "EmployeeID",
      foreignField: "EmployeeID",
      as: "Employee"
    }
  },
  { $unwind: "$Employee" },
  {
    $lookup: {
      from: "orderdetails",
      localField: "OrderID",
      foreignField: "OrderID",
      as: "Orderdetails"
    }
  },
  {
    $lookup: {
      from: "shippers",
      localField: "ShipVia",
      foreignField: "ShipperID",
      as: "Shipper"
    }
  },
  { $unwind: { path: "$Shipper", preserveNullAndEmptyArrays: true } },
  {
    $unwind: "$Orderdetails"
  },
  {
    $lookup: {
      from: "products",
      let: { pid: "$Orderdetails.ProductID" },
      pipeline: [
        { $match: { $expr: { $eq: ["$ProductID", "$$pid"] } } },
        {
          $lookup: {
            from: "categories",
            localField: "CategoryID",
            foreignField: "CategoryID",
            as: "Category"
          }
        },
        { $unwind: { path: "$Category", preserveNullAndEmptyArrays: true } },
        {
          $project: {
            ProductID: 1,
            ProductName: 1,
            QuantityPerUnit: 1,
            CategoryID: 1,
            CategoryName: "$Category.CategoryName"
          }
        }
      ],
      as: "Product"
    }
  },
  { $unwind: "$Product" },
  {
    $addFields: {
      "Orderdetails.product": {
        ProductID: "$Product.ProductID", //ze względu na $unwind tablice są rozbijane na osobne dokumenty
        ProductName: "$Product.ProductName",
        QuantityPerUnit: "$Product.QuantityPerUnit",
        CategoryID: "$Product.CategoryID",
        CategoryName: "$Product.CategoryName"
      },
      "Orderdetails.Value": {
        $multiply: [
          "$Orderdetails.UnitPrice",
          "$Orderdetails.Quantity",
          { $subtract: [1, "$Orderdetails.Discount"] }
        ]
      }
    }
  },
  {
    $group: {
      _id: "$OrderID",
      OrderID: { $first: "$OrderID" },
      Customer: { $first: {
        CustomerID: "$Customer.CustomerID",
        CompanyName: "$Customer.CompanyName",
        City: "$Customer.City",
        Country: "$Customer.Country"
      }},
      Employee: { $first: {
        EmployeeID: "$Employee.EmployeeID",
        FirstName: "$Employee.FirstName",
        LastName: "$Employee.LastName",
        Title: "$Employee.Title"
      }},
      Dates: { $first: {
        OrderDate: "$OrderDate",
        RequiredDate: "$RequiredDate"
      }},
      Freight: { $first: "$Freight" },
      Orderdetails: { $push: {
        UnitPrice: "$Orderdetails.UnitPrice",
        Quantity: "$Orderdetails.Quantity",
        Discount: "$Orderdetails.Discount",
        Value: "$Orderdetails.Value",
        product: "$Orderdetails.product"
      }},
      Shipment: { $first: {
        Shipper: {
          ShipperID: "$Shipper.ShipperID",
          CompanyName: "$Shipper.CompanyName"
        },
        ShipName: "$ShipName",
        ShipAddress: "$ShipAddress",
        ShipCity: "$ShipCity",
        ShipCountry: "$ShipCountry"
      }}
    }
  },
  {
    $addFields: {
      OrderTotal: { $sum: "$Orderdetails.Value" }
    }
  },
  {
    $project: {
      _id: 1,
      OrderID: 1,
      Customer: 1,
      Employee: 1,
      Dates: 1,
      Orderdetails: 1,
      Freight: 1,
      OrderTotal: 1,
      Shipment: 1
    }
  },
  {
    $merge: {
      into: "OrderInfo",
      whenMatched: "merge",
      whenNotMatched: "insert"
    }
  }
])