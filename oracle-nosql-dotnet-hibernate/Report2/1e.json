db.orders.insertOne({
    OrderID: 11078,
    EmployeeID: 5,
    CustomerID: "ALFKI",
    OrderDate: new Date("2025-04-16"),
    RequiredDate: new Date("2025-04-23"),
    ShippedDate: null,
    ShipVia: 2,
    Freight: 20,
    ShipName: "Alfreds Futterkiste",
    ShipAddress: "Obere Str. 57",
    ShipCity: "Berlin",
    ShipRegion: null,
    ShipPostalCode: "12209",
    ShipCountry: "Germany"
})



db.orderdetails.insertMany([
    {
        OrderID: 11078,
        ProductID: 1,
        UnitPrice: 18,
        Quantity: 10,
        Discount: 0.1
    },
    {
        OrderID: 11078,
        ProductID: 10,
        UnitPrice: 31,
        Quantity: 5,
        Discount: 0
    }
])




/////////////////////

db.orders.aggregate([
    { $match: { OrderID: 11078 } },
    { $lookup: {
        from: "customers",
        localField: "CustomerID",
        foreignField: "CustomerID",
        as: "Customer"
    }},
    { $unwind: "$Customer" },
    { $lookup: {
        from: "employees",
        localField: "EmployeeID",
        foreignField: "EmployeeID",
        as: "Employee"
    }},
    { $unwind: "$Employee" },
    { $lookup: {
        from: "orderdetails",
        localField: "OrderID",
        foreignField: "OrderID",
        as: "Orderdetails"
    }},
    { $lookup: {
        from: "shippers",
        localField: "ShipVia",
        foreignField: "ShipperID",
        as: "Shipper"
    }},
    { $unwind: { path: "$Shipper", preserveNullAndEmptyArrays: true } },
    { $unwind: { path: "$Orderdetails", preserveNullAndEmptyArrays: true } },
    { $lookup: {
        from: "products",
        localField: "Orderdetails.ProductID",
        foreignField: "ProductID",
        as: "Product"
    }},
    { $unwind: "$Product" },
    { $lookup: {
        from: "categories",
        localField: "Product.CategoryID",
        foreignField: "CategoryID",
        as: "ProdCat"
    }},
    { $unwind: "$ProdCat"},
    { $addFields: {
        "Orderdetails.product": {
          ProductID: "$Product.ProductID",
          ProductName: "$Product.ProductName",
          QuantityPerUnit: "$Product.QuantityPerUnit",
          CategoryID: "$Product.CategoryID",
          CategoryName: "$ProdCat.CategoryName"
        },
        "Orderdetails.Value": {
          $multiply: [
            "$Orderdetails.UnitPrice",
            "$Orderdetails.Quantity",
            { $subtract: [1, "$Orderdetails.Discount"] }
          ]
        }
    }},
    { $group: {
        _id: "$OrderID",
        OrderID: { $first: "$OrderID" },
        Customer: { $first: {
          CustomerID: "$Customer.CustomerID",
          CompanyName: "$Customer.CompanyName",
          City: "$Customer.City",
          Country: "$Customer.Country"
        }},
        Employee: { $first: {
          EmployeeID: "$Employee.EmployeeID",
          FirstName: "$Employee.FirstName",
          LastName: "$Employee.LastName",
          Title: "$Employee.Title"
        }},
        Dates: { $first: {
          OrderDate: "$OrderDate",
          RequiredDate: "$RequiredDate"
        }},
        Freight: { $first: "$Freight" },
        Orderdetails: { $push: {
          UnitPrice: "$Orderdetails.UnitPrice",
          Quantity: "$Orderdetails.Quantity",
          Discount: "$Orderdetails.Discount",
          Value: "$Orderdetails.Value",
          product: "$Orderdetails.product"
        }},
        Shipment: { $first: {
          Shipper: {
            ShipperID: "$Shipper.ShipperID",
            CompanyName: "$Shipper.CompanyName"
          },
          ShipName: "$ShipName",
          ShipAddress: "$ShipAddress",
          ShipCity: "$ShipCity",
          ShipCountry: "$ShipCountry"
        }}
    }},
    { $addFields: {
        OrderTotal: { $sum: "$Orderdetails.Value" }
    }},
    { $merge: {
        into: "OrderInfo",
        on: "OrderID",
        whenMatched: "replace",
        whenNotMatched: "insert"
    }}
  ]);

  db.OrderInfo.createIndex({ OrderID: 1 }, { unique: true })

  ///////


  db.customers.aggregate([
    { 
      $match: { 
        CustomerID: "ALFKI" // Możesz zmienić na konkretne ID lub usunąć dla wszystkich klientów
      } 
    },
    {
      $lookup: {
        from: "orders",
        let: { customerId: "$CustomerID" },
        pipeline: [
          { 
            $match: { 
              $expr: { $eq: ["$CustomerID", "$$customerId"] } 
            } 
          }
        ],
        as: "Orders"
      }
    },
    { $unwind: "$Orders" },
    {
      $lookup: {
        from: "employees",
        let: { empId: "$Orders.EmployeeID" },
        pipeline: [
          { 
            $match: { 
              $expr: { $eq: ["$EmployeeID", "$$empId"] } 
            } 
          },
          { $limit: 1 }
        ],
        as: "Employee"
      }
    },
    { $unwind: "$Employee" },
    {
      $lookup: {
        from: "shippers",
        let: { shipperId: "$Orders.ShipVia" },
        pipeline: [
          { 
            $match: { 
              $expr: { $eq: ["$ShipperID", "$$shipperId"] } 
            } 
          },
          { $limit: 1 }
        ],
        as: "Shipper"
      }
    },
    { $unwind: "$Shipper" },
    {
      $lookup: {
        from: "orderdetails",
        let: { orderId: "$Orders.OrderID" },
        pipeline: [
          { 
            $match: { 
              $expr: { $eq: ["$OrderID", "$$orderId"] } 
            } 
          }
        ],
        as: "Details"
      }
    },
    { $unwind: "$Details" },
    {
      $lookup: {
        from: "products",
        let: { productId: "$Details.ProductID" },
        pipeline: [
          { 
            $match: { 
              $expr: { $eq: ["$ProductID", "$$productId"] } 
            } 
          },
          { $limit: 1 }
        ],
        as: "Product"
      }
    },
    { $unwind: "$Product" },
    {
      $lookup: {
        from: "categories",
        let: { categoryId: "$Product.CategoryID" },
        pipeline: [
          { 
            $match: { 
              $expr: { $eq: ["$CategoryID", "$$categoryId"] } 
            } 
          },
          { $limit: 1 }
        ],
        as: "Category"
      }
    },
    { $unwind: "$Category" },
    {
      $addFields: {
        "Details.Value": {
          $multiply: [
            "$Details.UnitPrice",
            "$Details.Quantity",
            { $subtract: [1, "$Details.Discount"] }
          ]
        },
        "Details.Product": {
          ProductID: "$Product.ProductID",
          ProductName: "$Product.ProductName",
          QuantityPerUnit: "$Product.QuantityPerUnit",
          CategoryID: "$Category.CategoryID",
          CategoryName: "$Category.CategoryName"
        }
      }
    },
    {
      $group: {
        _id: {
          CustomerID: "$CustomerID",
          OrderID: "$Orders.OrderID"
        },
        CompanyName: { $first: "$CompanyName" },
        City: { $first: "$City" },
        Country: { $first: "$Country" },
        Employee: {
          $first: {
            EmployeeID: "$Employee.EmployeeID",
            FirstName: "$Employee.FirstName",
            LastName: "$Employee.LastName",
            Title: "$Employee.Title"
          }
        },
        Dates: {
          $first: {
            OrderDate: "$Orders.OrderDate",
            RequiredDate: "$Orders.RequiredDate"
          }
        },
        Freight: { $first: "$Orders.Freight" },
        Shipment: {
          $first: {
            Shipper: {
              ShipperID: "$Shipper.ShipperID",
              CompanyName: "$Shipper.CompanyName"
            },
            ShipName: "$Orders.ShipName",
            ShipAddress: "$Orders.ShipAddress",
            ShipCity: "$Orders.ShipCity",
            ShipCountry: "$Orders.ShipCountry"
          }
        },
        OrderDetails: { $push: "$Details" },
        OrderTotal: {
          $sum: "$Details.Value"
        }
      }
    },
    {
      $group: {
        _id: "$_id.CustomerID",
        CustomerID: { $first: "$_id.CustomerID" },
        CompanyName: { $first: "$CompanyName" },
        City: { $first: "$City" },
        Country: { $first: "$Country" },
        Orders: {
          $push: {
            OrderID: "$_id.OrderID",
            Employee: "$Employee",
            Dates: "$Dates",
            Freight: "$Freight",
            Shipment: "$Shipment",
            Orderdetails: "$OrderDetails",
            OrderTotal: "$OrderTotal"
          }
        }
      }
    },
    {
      $project: {
        _id: 1,
        CustomerID: 1,
        CompanyName: 1,
        City: 1,
        Country: 1,
        Orders: 1
      }
    },
    {
      $merge: {
        into: "CustomerInfo",
        on: "CustomerID",
        whenMatched: "replace",
        whenNotMatched: "insert"
      }
    }
  ])

  db.CustomerInfo.createIndex({ CustomerID: 1 }, { unique: true })